# Docs: https://python-poetry.org/docs/
[tool.poetry]
name = "various_recommendation_methods"
version = "0.1.0"
description = "sample codes for various recommendation methods"
authors = ["Konippi <konippi-114@outlook.jp>"]
readme = "README.md"
packages = [
    { include = "src" },
]

# mypy
[tool.mypy]
show_error_context = true
show_column_numbers = true
ignore_missing_imports = true
no_implicit_optional = true
disallow_untyped_defs = true
check_untyped_defs = true

# ruff
[tool.ruff]
target-version = "py312"
exclude = [".venv", ".mypy_cache", ".pytest_cache", "__pycache__"]
line-length = 120
indent-width = 4
src = ["src"]

[tool.ruff.lint]
select = ["C", "E", "F", "W"]
ignore = ["E203", "E402"]
fixable = ["ALL"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.pydocstyle]
convention = "numpy"

# tasks
[tool.taskipy.tasks]
random = "poetry run python src/models/random/main.py"
association_rules = "poetry run python src/models/association_rules/main.py"

# dependencies
[tool.poetry.dependencies]
python = "^3.12"
numpy = "^1.26.3"
pandas = "^2.1.4"
scikit-learn = "^1.3.2"
mlxtend = "^0.23.1"
scipy = "^1.11.4"
taskipy = "^1.12.2"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.13"
mypy = "^1.8.0"
pytest = "^7.4.4"
pre-commit = "^3.6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
